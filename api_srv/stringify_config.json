{
  "username" : "default@comcast.com",
  "password" : "stringify",
  "AuthTimeout" : 10000000,
  "seeds": { "seeds": [{ "addedToConsoleFav": 1535206490359, "myHub": "69b0e86b89a594a2be64d41658663d06", "autoProvision": true, "myHubRosetta": "O4iRrm3oADpYkdQi7EXvL90G7buh7LQC_1", "status": "configured", "name": "Button (Red)", "thingId": "a52d5269d23346bda9e23a5e30021f08", "seedId": "a52d5269d23346bda9e23a5e30021f08", "showAuthLink": false, "consoleFav": "true", "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": false, "rosettaId_version": "O9X5BGvYrlPwkTz84dgP5tXmeLiWnDh3_1", "isHub": false, "family": "Physical", "brand": "Button", "type": "Essentials", "seedImage": "498uJMXpsOEbatnQf8Tgu5jQJHlS7uLM_1_2ZEw48y1.png", "consoleEligible": true, "flowEligible": true, "attribSet": [{ "button1": "on" }] }, { "autoProvision": false, "status": "configured", "name": "Virtual Button", "isHiddenHub": true, "thingId": "69b0e86b89a594a2be64d41658663d06", "seedId": "69b0e86b89a594a2be64d41658663d06", "showAuthLink": true, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": false, "rosettaId_version": "O4iRrm3oADpYkdQi7EXvL90G7buh7LQC_1", "isHub": true, "family": "Physical", "brand": "Button", "type": "Auto", "flowEligible": false }, { "autoProvision": true, "status": "configured", "name": "Date & Time", "thingId": "430507ce74b8ea76c0ba0602a4efdddc", "seedId": "430507ce74b8ea76c0ba0602a4efdddc", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": true, "rosettaId_version": "uoVkHvmV_2", "isHub": false, "family": "Digital", "brand": "Date & Time", "type": "Essentials", "flowEligible": true }, { "autoProvision": true, "status": "configured", "name": "Email", "thingId": "c17856a5322f19fcdc080021e96b77b6", "seedId": "c17856a5322f19fcdc080021e96b77b6", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": true, "rosettaId_version": "V8PB44ht_1", "isHub": false, "family": "Digital", "brand": "Email", "type": "Essentials", "flowEligible": true }, { "autoProvision": false, "status": "configured", "name": "Functions: Text", "thingId": "f9d0daf03708c212b2930e62d20f4cdd", "seedId": "f9d0daf03708c212b2930e62d20f4cdd", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": false, "rosettaId_version": "CpBbUMD7LDJ3FTkunQPSYfPGLeAAqkdU_1", "isHub": false, "family": "Digital", "brand": "Functions", "type": "Pro", "flowEligible": true }, { "autoProvision": true, "status": "configured", "name": "Location", "thingId": "d938036180da16ae7b3a371e44f10409", "seedId": "d938036180da16ae7b3a371e44f10409", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": true, "rosettaId_version": "Eh2SxU74_1", "isHub": false, "family": "Digital", "brand": "Location", "type": "Location", "flowEligible": true }, { "autoProvision": false, "status": "configured", "name": "Mode", "thingId": "f3257a6081a347c36ff3eb7bce9ffe7a", "seedId": "f3257a6081a347c36ff3eb7bce9ffe7a", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": false, "rosettaId_version": "2rB7D4mh96LFk9OKcVnKE6cxzfaBc6Ka_1", "isHub": false, "family": "Digital", "brand": "Mode", "type": "Misc", "consoleEligible": true, "flowEligible": true }, { "authType": "oauth2", "accountId": "ae2e77f91923943be9e1234914dcde06", "status": "configured", "name": "Smithwood", "thingId": "XWtwkc_Jljc6D4FxCnff8I8JEOdnn13IzdevDclfstThBZtyFwlFfw", "seedId": "672611c6e01b7060d49b7392d62a84d3", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "accountIdHash": "a6f26ad19d668b72c5a861977b4dab1d", "family": "Physical", "isHub": true, "rosettaId_version": "w1qUpEDz_1", "ghost": false, "brand": "Nest", "type": "Home Automation", "requireReAuth": false, "consoleEligible": true, "flowEligible": true, "attribSet": [{ "away": "home" }] }, { "myHub": "672611c6e01b7060d49b7392d62a84d3", "myHubRosetta": "w1qUpEDz_1", "status": "configured", "name": "Living Room (MainT)", "thingId": "_N6sEd6EvF0LhtOpcVq4KleKh1UJo6ab", "seedId": "219721f3154be4e0e94bf6254b6b2b7f", "showAuthLink": true, "userId": "f8aef681799a5a15d9fece5514db1bb4", "family": "Physical", "rosettaId_version": "9qfKSlb55trtw4CQlkrYnDTE35fHWUCS_1", "ghost": false, "myHubName": "Smithwood", "brand": "Nest", "type": "Thermostats", "seedImage": "1vyI1AOKgMUvc0syNL415yHx5HGLOikL_1-Z2lEQc8.png", "thingColor": "#383F49", "requireReAuth": false, "consoleEligible": true, "flowEligible": true, "attribSet": [{ "ambient_temp_console": "undefinedÂº", "temperature": "", "mode": "", "humidity_console": "" }] }, { "autoProvision": true, "status": "configured", "name": "Notifications", "thingId": "25fc9d4245f954a5ef2682fc2257e48e", "seedId": "25fc9d4245f954a5ef2682fc2257e48e", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": true, "rosettaId_version": "3hD80lz6pvRI8WqXLs8rOORjAcklgjJJ_1", "isHub": false, "family": "Digital", "brand": "Notifications", "type": "Essentials", "consoleEligible": true, "flowEligible": true }, { "autoProvision": true, "status": "configured", "name": "Timer", "thingId": "1ab29ccc65bf9072704ee45aabddefb8", "seedId": "1ab29ccc65bf9072704ee45aabddefb8", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": true, "rosettaId_version": "qpfTVCl0_1", "isHub": false, "family": "Digital", "brand": "Timer", "type": "Essentials", "flowEligible": true }, { "autoProvision": true, "status": "configured", "name": "Weather", "thingId": "a7cf7e86c84577deceb961065f1ddb4b", "seedId": "a7cf7e86c84577deceb961065f1ddb4b", "showAuthLink": false, "userId": "f8aef681799a5a15d9fece5514db1bb4", "isSystem": true, "rosettaId_version": "rLdHdJr6_6", "isHub": false, "family": "Digital", "brand": "Weather", "type": "Essentials", "flowEligible": true, "attribSet": [{ "sunriseTime": "Sunrise at: 6:34 AM", "forecastUrl": "http://www.wunderground.com/cgi-bin/findweather/getForecast?query=37.4333204,-121.9172213", "humidity": "Average humidity: 56", "sunsetTime": "Sunset at: 7:47 PM", "location": "{\"country\":\"US\",\"country_code\":\"US\",\"lng\":-121.9172213,\"formattedAddress\":\"303 Smithwood St, Milpitas, CA 95035, USA\",\"city\":\"Milpitas\",\"postalCode\":\"95035\",\"country_name\":\"United States\",\"state\":\"CA\",\"lat\":37.4333204}", "lowTemp": "Tomorrow's low: 58F", "highTemp": "Tomorrow's high: 79F", "report": "Tomorrow's weather report for Milpitas, CA\rA mainly sunny sky. Areas of smoke and haze are possible, reducing visibility at times. High 79F. S winds shifting to NW at 10 to 15 mph.\r", "name": "Weather", "dateDropdown": "tomorrow", "condition": "clear" }] }], "rosettasData": { "qpfTVCl0_1": { "properties": { "requiresSystemLocation": false, "description": "Timer can be used to schedule actions based on specific intervals of time.", "heroImage": "qpfTVCl0_1-Z1Yi3TE.jpg", "requiresHub": false, "type": "Essentials", "TTL": 120, "allowRenameOfSeedTitle": false, "thingColor": "#402DAE", "isHub": false, "rosettaId": "qpfTVCl0", "actionRequired": false, "minClientVersion": {}, "brand": "Timer", "autoConsoleFav": false, "plusOnly": false, "limited": false, "deviceVersion": "1.0", "seedImage": "qpfTVCl0_1-ZnOtLD.png", "version": "1", "isSystem": true, "requiresSystemNotifications": false, "name": "Timer", "seedTitle": "Timer", "family": "Digital" }, "ui": { "elements": [{ "actionText": "Start the timer", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "undefined", "actionFlowDescription": "start my {{rosettaName}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "startTime", "trigger": false, "actionSuccessMessage": "timer started", "elementName": "setTimer", "hideElement": false, "variableInclude": ["startTime", "timerStartedAt", "timerEndedAt", "todaysDate", "countdownDuration"], "action": true, "actionFailureMessage": "unable to start timer", "expireSeconds": 0, "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "initControl": false, "name": "startTime", "required": true }, { "hidden": false, "initControl": false, "name": "helperText", "required": false }] }] }, "controls": { "timerStartedAt": { "controlType": "variableOnly", "friendlyVariableName": "Timer Start Time", "showNever": false, "controlDataType": "string" }, "timerEndedAt": { "controlType": "variableOnly", "friendlyVariableName": "Timer End Time", "showNever": false, "controlDataType": "string" }, "todaysDate": { "controlType": "variableOnly", "friendlyVariableName": "Today's Date", "showNever": false, "controlDataType": "string" }, "helperText2": { "textJustification": "left", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "actionCaption": "Be sure to connect an action to this timer." }, "startTime": { "allowMultiple": false, "controlType": "timerPicker", "friendlyVariableName": "Start time", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "actionCaption": "Countdown", "allowMultiplePremiumOnly": false }, "helperText": { "textJustification": "left", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "actionCaption": "Only one real-time trigger can be connected to the timer in order for countdown to begin. Be sure to add an action to this timer." }, "countdownDuration": { "controlType": "variableOnly", "friendlyVariableName": "Countdown duration", "showNever": false, "controlDataType": "string" } } }, "3hD80lz6pvRI8WqXLs8rOORjAcklgjJJ_1": { "properties": { "requiresSystemLocation": false, "description": "Notifications allows you to bring custom alerts into iOS or Android Notifications for quick and easy access.", "heroImage": "3hD80lz6pvRI8WqXLs8rOORjAcklgjJJ_1-2qVizb.jpg", "requiresHub": false, "type": "Essentials", "TTL": 20000, "allowRenameOfSeedTitle": false, "thingColor": "#0E2B7B", "isHub": false, "rosettaId": "3hD80lz6pvRI8WqXLs8rOORjAcklgjJJ", "actionRequired": false, "minClientVersion": {}, "brand": "Notifications", "autoConsoleFav": false, "plusOnly": false, "limited": false, "deviceVersion": "1.0", "seedImage": "3hD80lz6pvRI8WqXLs8rOORjAcklgjJJ_1-Z1HR3QJ.png", "version": "1", "isSystem": true, "requiresSystemNotifications": true, "name": "Notifications", "seedTitle": "Notifications", "family": "Digital" }, "ui": { "elements": [{ "actionText": "Send me a push notification", "actionFlowDescription": "send me a push notification", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "message", "trigger": false, "actionSuccessMessage": "{{control.message}}", "elementName": "sendPush", "hideElement": false, "action": true, "actionFailureMessage": "unable to send push notification", "expireSeconds": 0, "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "message", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "turnOnPushNotificationsText", "required": false }] }], "console": { "webview": false, "consoleInit": true, "controlsToInclude": ["deviceCount"] } }, "controls": { "deviceCount": { "textJustification": "left", "controlType": "textLabelWithValue", "isNumber": false, "showNever": false, "textStyle": "regular", "controlDataType": "string", "actionCaption": "Device count" }, "messageFormatted": { "controlType": "variableOnly", "showNever": false, "controlDataType": "string" }, "message": { "controlType": "textBox", "allowVariables": true, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "actionCaption": "Push Notification Message" }, "turnOnPushNotificationsText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "bold", "controlDataType": "string", "actionCaption": "This action requires notifications to be enabled on your iOS or Android device" } } }, "uoVkHvmV_2": { "properties": { "description": "Date & Time can be used to schedule actions based on specific dates and times for your time zone. Any time, all the time.", "heroImage": "uoVkHvmV_2-hmQSu.jpg", "type": "Essentials", "requiresHub": false, "thingColor": "#BB370D", "isHub": false, "rosettaId": "uoVkHvmV", "actionRequired": false, "brand": "Date & Time", "sla": 30, "deviceVersion": "1.0.0", "seedImage": "uoVkHvmV_2-Z1KrejV.png", "version": "2", "tags": ["Utility"], "isSystem": true, "seedTitle": "Date & Time", "name": "Date & Time", "family": "Digital" }, "ui": { "elements": [{ "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "date was {{control.eventDate}} and time was {{control.eventTime}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "time", "trigger": true, "triggerText": "Date and time is:", "elementName": "ui_date_and_time_is", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["eventDate", "eventTime", "nextEventDateTime", "locationFriendlyVariableInclude"], "triggerFlowDescription": "the Date and Time is a value", "action": false, "expireSeconds": 0, "operand": "==", "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "time", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_date_and_time_is", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_repeat_date_and_time", "required": false }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_repeat_date", "required": true }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": true }] }, { "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "time was between {{control.from_time}} and {{control.to_line}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "time", "trigger": true, "triggerText": "Time is between:", "elementName": "ui_time_is_between", "hideElement": false, "ignoreIncomingTimestamp": false, "triggerFlowDescription": "the Time is between two values", "action": false, "expireSeconds": 86400, "operand": "==", "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "timeIsBetweenHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "from_date", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "from_time", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "to_time", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "toTimeTimeIsBetweenHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_time_is_between", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_repeat_date", "required": true }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": true }] }, { "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "the time was after {{control.time}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "time", "trigger": true, "triggerText": "Time is after:", "elementName": "ui_time_is_after", "hideElement": false, "ignoreIncomingTimestamp": false, "triggerFlowDescription": "the Time is after a value", "action": false, "expireSeconds": 86400, "operand": "==", "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "timeIsAfterHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "time", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "timeTimeIsAfterHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_time_is_between", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_repeat_date", "required": true }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": true }] }, { "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "it was sunrise at {{control.sunriseTime}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "time", "trigger": true, "triggerText": "Sunrise", "elementName": "ui_at_sunrise", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationFriendlyVariableInclude", "sunriseDate", "sunriseTime", "timeOffsetFriendlyVariableInclude", "currentTime"], "triggerFlowDescription": "it is sunrise", "action": false, "expireSeconds": 0, "operand": "==", "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date_sunrise_sunset", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "timeOffsetSunrise", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_time_is_between", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_date_sunrise_sunset", "required": false }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": true }] }, { "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "it was sunset at {{control.sunsetTime}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "time", "trigger": true, "triggerText": "Sunset", "elementName": "ui_at_sunset", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationFriendlyVariableInclude", "timeOffsetFriendlyVariableInclude", "currentTime", "sunsetDate", "sunsetTime"], "triggerFlowDescription": "it is sunset", "action": false, "expireSeconds": 0, "operand": "==", "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date_sunrise_sunset", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "timeOffsetSunset", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_time_is_between", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_date_sunrise_sunset", "required": false }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": true }] }, { "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "it was daytime", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "start_date", "trigger": true, "triggerText": "It is daytime", "elementName": "ui_time_is_between_sunrise_sunset", "hideElement": false, "ignoreIncomingTimestamp": false, "triggerFlowDescription": "it is daytime", "action": false, "expireSeconds": 86400, "operand": "==", "controlsToInclude": [{ "default": "sunrise2sunset", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "sunrise2SunsetType", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "itIsDaytimeHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date_sunrise_sunset", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_time_is_between", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_date_sunrise_sunset", "required": true }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": false }] }, { "broadcast": false, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "it was nighttime", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "start_date", "trigger": true, "triggerText": "It is nighttime", "elementName": "ui_time_is_between_sunset_sunrise", "hideElement": false, "ignoreIncomingTimestamp": false, "triggerFlowDescription": "it is nighttime", "action": false, "expireSeconds": 86400, "operand": "==", "controlsToInclude": [{ "default": "sunset2sunrise", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "sunrise2SunsetType", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "itIsNighttimeHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date_sunrise_sunset", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_time_is_between", "required": true }, { "default": "never", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "end_date_sunrise_sunset", "required": true }, { "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": false }] }, { "broadcast": true, "operandAppliesTo": "date_time_in_effect", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["date_time_in_effect"], "operandAppliesToEnd": "start_date", "trigger": true, "triggerText": "Random time between (beta):", "elementName": "ui_date_and_time_is_random", "hideElement": false, "ignoreIncomingTimestamp": false, "triggerFlowDescription": "Choose a random time", "action": false, "expireSeconds": 0, "operand": "==", "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "start_date", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "from_time", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "to_time", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "repeat_date_and_time_is", "required": true }, { "default": "never", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "end_repeat_date_and_time", "required": true }, { "hidden": true, "removeOnPublish": false, "initControl": false, "name": "end_repeat_date", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "location2timezoneHelperText", "required": false }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "date_time_in_effect", "required": false }] }] }, "controls": { "itIsNighttimeHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Any other real-time trigger arriving between sunset and sunrise will execute the flow." }, "timeTimeIsAfterHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Valid till midnight same day" }, "itIsDaytimeHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Any other real-time trigger arriving between sunrise and sunset will execute the flow." }, "end_repeat_date_and_time": { "allowMultiple": false, "controlType": "dateTime", "dependentOn": [{ "controlName": "repeat_date_and_time_is", "controlValue": "hourly" }], "eventTrigger": "none", "showNever": true, "controlDataType": "string", "triggerCaption": "End Repeat:", "allowMultiplePremiumOnly": false }, "timezone": { "controlType": "dropdown", "oneLine": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Timezone" }, "end_repeat_date": { "allowMultiple": false, "controlType": "datePicker", "dependentOn": [{ "controlName": "repeat_time_is_between", "controlValue": "daily" }, { "controlName": "repeat_time_is_between", "controlValue": "weekly" }, { "controlName": "repeat_time_is_between", "controlValue": "biweekly" }, { "controlName": "repeat_time_is_between", "controlValue": "weekday" }, { "controlName": "repeat_time_is_between", "controlValue": "weekend" }, { "controlName": "repeat_time_is_between", "controlValue": "monthly" }, { "controlName": "repeat_time_is_between", "controlValue": "lastDayOfMonth" }, { "controlName": "repeat_time_is_between", "controlValue": "yearly" }, { "controlName": "repeat_date_and_time_is", "controlValue": "daily" }, { "controlName": "repeat_date_and_time_is", "controlValue": "weekly" }, { "controlName": "repeat_date_and_time_is", "controlValue": "weekday" }, { "controlName": "repeat_date_and_time_is", "controlValue": "weekend" }, { "controlName": "repeat_date_and_time_is", "controlValue": "monthly" }, { "controlName": "repeat_date_and_time_is", "controlValue": "lastDayOfMonth" }, { "controlName": "repeat_date_and_time_is", "controlValue": "biweekly" }, { "controlName": "repeat_date_and_time_is", "controlValue": "yearly" }], "eventTrigger": "none", "showNever": true, "controlDataType": "string", "triggerCaption": "End Repeat:", "allowMultiplePremiumOnly": false }, "sunrise2SunsetType": { "controlType": "textInput", "isNumber": false, "allowVariables": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string" }, "from_time": { "allowMultiple": false, "controlType": "timePicker", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "From Time", "allowMultiplePremiumOnly": false }, "start_date_sunrise_sunset": { "allowMultiple": false, "controlType": "datePicker", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Start Date:", "allowMultiplePremiumOnly": false }, "toTimeTimeIsBetweenHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Trigger status will be valid till the following day when To Time is earlier than From Time." }, "timeOffsetSunrise": { "controlType": "dropdown", "defaultValue": "0", "oneLine": true, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "items": [{ "objname": "2 hours before", "objvalue": "-120" }, { "objname": "90 minutes before", "objvalue": "-90" }, { "objname": "1 hour before", "objvalue": "-60" }, { "objname": "45 minutes before", "objvalue": "-45" }, { "objname": "30 minutes before", "objvalue": "-30" }, { "objname": "15 minutes before", "objvalue": "-15" }, { "objname": "At sunrise", "objvalue": "0" }, { "objname": "15 minutes after", "objvalue": "15" }, { "objname": "30 minutes after", "objvalue": "30" }, { "objname": "45 minutes after", "objvalue": "45" }, { "objname": "1 hour after", "objvalue": "60" }, { "objname": "90 minutes after", "objvalue": "90" }, { "objname": "2 hours after", "objvalue": "120" }], "triggerCaption": "Sunrise offset" }, "sunsetTime": { "controlType": "variableOnly", "friendlyVariableName": "Sunset Time", "showNever": false, "controlDataType": "string" }, "eventTime": { "controlType": "variableOnly", "friendlyVariableName": "Event Time", "showNever": false, "controlDataType": "string" }, "timeOffsetFriendlyVariableInclude": { "controlType": "variableOnly", "friendlyVariableName": "Time Offset", "showNever": false, "controlDataType": "string" }, "end_date_sunrise_sunset": { "allowMultiple": false, "controlType": "datePicker", "dependentOn": [{ "controlName": "repeat_time_is_between", "controlValue": "daily" }, { "controlName": "repeat_time_is_between", "controlValue": "weekly" }, { "controlName": "repeat_time_is_between", "controlValue": "biweekly" }, { "controlName": "repeat_time_is_between", "controlValue": "weekday" }, { "controlName": "repeat_time_is_between", "controlValue": "weekend" }, { "controlName": "repeat_time_is_between", "controlValue": "monthly" }, { "controlName": "repeat_time_is_between", "controlValue": "lastDayOfMonth" }, { "controlName": "repeat_time_is_between", "controlValue": "yearly" }], "eventTrigger": "none", "showNever": true, "controlDataType": "string", "triggerCaption": "End Repeat:", "allowMultiplePremiumOnly": false }, "start_date": { "allowMultiple": false, "controlType": "datePicker", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Start Date", "allowMultiplePremiumOnly": false }, "sunriseTime": { "controlType": "variableOnly", "friendlyVariableName": "Sunrise Time", "showNever": false, "controlDataType": "string" }, "date_time_in_effect": { "controlType": "textInput", "isNumber": false, "allowVariables": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string" }, "from_date": { "allowMultiple": false, "controlType": "datePicker", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Start Date", "allowMultiplePremiumOnly": false }, "location2timezoneHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Enter zip code, city/state or address. Stringify will automatically determine the time zone." }, "sunsetDate": { "controlType": "variableOnly", "friendlyVariableName": "Sunset Date", "showNever": false, "controlDataType": "string" }, "timeIsAfterHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Any other real-time trigger arriving between this time range will execute the flow." }, "lat_lng_location": { "controlType": "textInput", "isNumber": false, "allowVariables": false, "eventTrigger": "none", "showNever": false, "placeholder": "Enter latitude, longitude", "controlDataType": "string", "triggerCaption": "Lat/Long" }, "time_is_after_tip": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will be valid between the time you specify above till midnight." }, "timeOffsetSunset": { "controlType": "dropdown", "defaultValue": "0", "oneLine": true, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "items": [{ "objname": "2 hours before", "objvalue": "-120" }, { "objname": "90 minutes before", "objvalue": "-90" }, { "objname": "1 hour before", "objvalue": "-60" }, { "objname": "45 minutes before", "objvalue": "-45" }, { "objname": "30 minutes before", "objvalue": "-30" }, { "objname": "15 minutes before", "objvalue": "-15" }, { "objname": "At sunset", "objvalue": "0" }, { "objname": "15 minutes after", "objvalue": "15" }, { "objname": "30 minutes after", "objvalue": "30" }, { "objname": "45 minutes after", "objvalue": "45" }, { "objname": "1 hour after", "objvalue": "60" }, { "objname": "90 minutes after", "objvalue": "90" }, { "objname": "2 hours after", "objvalue": "120" }], "triggerCaption": "Sunset offset" }, "currentTime": { "controlType": "variableOnly", "friendlyVariableName": "Current Time", "showNever": false, "controlDataType": "string" }, "timeIsBetweenHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Any other real-time trigger arriving between this time range will execute the flow." }, "repeat_time_is_between": { "controlType": "dropdown", "defaultValue": "daily", "oneLine": true, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "items": [{ "objname": "Never", "objvalue": "never" }, { "objname": "Every day", "objvalue": "daily" }, { "objname": "Every week", "objvalue": "weekly" }, { "objname": "Bi-weekly", "objvalue": "biweekly" }, { "objname": "Every weekday", "objvalue": "weekday" }, { "objname": "Every weekend", "objvalue": "weekend" }, { "objname": "Every month", "objvalue": "monthly" }, { "objname": "Last Day of Month", "objvalue": "lastDayOfMonth" }, { "objname": "Every year", "objvalue": "yearly" }], "triggerCaption": "Repeat:" }, "locationFriendlyVariableInclude": { "controlType": "variableOnly", "friendlyVariableName": "Location", "showNever": false, "controlDataType": "string" }, "nextEventDateTime": { "controlType": "variableOnly", "friendlyVariableName": "Next Event Date & Time", "showNever": false, "controlDataType": "string" }, "sunriseDate": { "controlType": "variableOnly", "friendlyVariableName": "Sunrise Date", "showNever": false, "controlDataType": "string" }, "location": { "controlType": "locationSearchBar", "allowVariables": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "helperText": "Enter zip code, city/state or address. Stringify will automatically determine the time zone.", "triggerCaption": "Time zone:" }, "repeat_date_and_time_is": { "controlType": "dropdown", "defaultValue": "daily", "oneLine": true, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "items": [{ "objname": "Never", "objvalue": "never" }, { "objname": "Every hour", "objvalue": "hourly" }, { "objname": "Every day", "objvalue": "daily" }, { "objname": "Every week", "objvalue": "weekly" }, { "objname": "Bi-weekly", "objvalue": "biweekly" }, { "objname": "Every weekday", "objvalue": "weekday" }, { "objname": "Every weekend", "objvalue": "weekend" }, { "objname": "Every month", "objvalue": "monthly" }, { "objname": "Last Day of Month", "objvalue": "lastDayOfMonth" }, { "objname": "Every year", "objvalue": "yearly" }], "triggerCaption": "Repeat:" }, "time": { "allowMultiple": false, "controlType": "timePicker", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Time", "allowMultiplePremiumOnly": false }, "to_time": { "allowMultiple": false, "controlType": "timePicker", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "To Time:", "allowMultiplePremiumOnly": false }, "eventDate": { "controlType": "variableOnly", "friendlyVariableName": "Event Date", "showNever": false, "controlDataType": "string" } } }, "w1qUpEDz_1": { "properties": { "groupMyThingsInMarket": false, "isHiddenHubOnlySeeds": false, "requiresSystemLocation": false, "description": "Nest watches out for both your home and your family. When you add more products to your Nest home, they can automatically work together by helping you save energy, alerting you to what's wrong and keeping an eye on what matters.", "heroImage": "w1qUpEDz_1_wUILMq1v.jpg", "requiresHub": false, "type": "Home Automation", "allowRenameOfSeedTitle": false, "thingColor": "#383F49", "isHub": true, "rosettaId": "w1qUpEDz", "actionRequired": false, "isHiddenHub": false, "minClientVersion": {}, "brand": "Nest", "limited": true, "maxAccounts": 1, "deviceVersion": "1.0", "seedImage": "w1qUpEDz_1-1x1uO.png", "version": "1", "isSystem": false, "requiresSystemNotifications": false, "name": "Nest", "seedTitle": "Nest", "family": "Physical" }, "ui": { "elements": [{ "broadcast": true, "operandAppliesTo": "away", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "{{control.deviceName}} changed to Home mode", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["away"], "operandAppliesToEnd": "deviceName", "trigger": true, "triggerText": "Home changes to Home mode", "actionSuccessMessage": "undefined", "elementName": "homeMode", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "away"], "triggerFlowDescription": "my {{rosettaName}} Home changes to Home mode", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "changes to", "premiumOnly": false, "controlsToInclude": [{ "default": "home", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "away", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeIcon", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeSave", "required": false }] }, { "broadcast": true, "operandAppliesTo": "away", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "{{control.deviceName}} changed to Away mode", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["away"], "operandAppliesToEnd": "deviceName", "trigger": true, "triggerText": "Home changes to Away mode", "actionSuccessMessage": "undefined", "elementName": "awayMode", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "away"], "triggerFlowDescription": "my {{rosettaName}} Home changes to Away mode", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "changes to", "premiumOnly": false, "controlsToInclude": [{ "default": "away", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "away", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeAwayModeIcon", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeAwayModeHelpText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeSave", "required": false }] }, { "broadcast": true, "operandAppliesTo": "away", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "{{control.deviceName}} Home status is Home", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["away"], "operandAppliesToEnd": "deviceName", "trigger": true, "triggerText": "Home status is Home", "actionSuccessMessage": "undefined", "elementName": "nestStatusIsHome", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "away"], "triggerFlowDescription": "my {{rosettaName}} Home status is Home", "action": false, "actionFailureMessage": "undefined", "expireSeconds": -1, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "default": "home", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "away", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeIcon", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "nestStatusHomeHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeSave", "required": false }] }, { "broadcast": true, "operandAppliesTo": "away", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "{{control.deviceName}} Home status is Away", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["away"], "operandAppliesToEnd": "deviceName", "trigger": true, "triggerText": "Home status is Away", "actionSuccessMessage": "undefined", "elementName": "nestStatusIsAway", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "away"], "triggerFlowDescription": "my {{rosettaName}} Home status is Away", "action": false, "actionFailureMessage": "undefined", "expireSeconds": -1, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "default": "away", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "away", "required": true }, { "hidden": true, "removeOnPublish": false, "initControl": false, "name": "changeAwayModeIcon", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "nestStatusAwayHelperText", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "changeHomeModeSave", "required": false }] }, { "actionText": "Set ETA", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "deviceName", "action": true, "expireSeconds": 0, "trigger": false, "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "eta", "required": true }], "elementName": "setEta", "hideElement": false }], "console": { "webview": false, "consoleInit": false, "controlsToInclude": ["away"] } }, "controls": { "occurredAt": { "controlType": "variableOnly", "friendlyVariableName": "Occurred at", "showNever": false, "controlDataType": "string" }, "away": { "controlType": "toggleSwitch", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "items": [{ "objname": "Away", "objvalue": "away" }, { "objname": "Home", "objvalue": "home" }] }, "eta": { "controlType": "textInput", "isNumber": false, "allowVariables": true, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "actionCaption": "ETA (Type a time or a minutes parameter from 'Traffic')" }, "changeAwayModeHelpText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will execute when your Home changes to Away.", "actionCaption": "This action will set your Home to Away mode. If you have multiple Nest devices, they all will be set to Away when this action executes." }, "changeAwayModeIcon": { "controlType": "image", "imageUrl": "wSkGqa1p_1_53PRaT58.png", "eventTrigger": "none", "imageJustification": "center", "showNever": false, "controlDataType": "string" }, "nestStatusHomeHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This status is set when Nest is set to Home mode. " }, "changeHomeModeSave": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "bold", "controlDataType": "string", "triggerCaption": "Tap save to select this trigger.", "actionCaption": "Tap save to select this action." }, "changeHomeModeIcon": { "controlType": "image", "imageUrl": "wSkGqa1p_1_OAbRxMBB.png", "eventTrigger": "none", "imageJustification": "center", "showNever": false, "controlDataType": "string" }, "deviceName": { "controlType": "textLabel", "friendlyVariableName": "Nest name", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Thermostat Name", "actionCaption": "Thermostat Name" }, "nestStatusAwayHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This status is set when Nest is set to Away mode. " }, "changeHomeModeHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will execute when your Home changes to Home.", "actionCaption": "This action will set your Home to Home mode. If you have multiple Nest devices, they all will be set to Home when this action executes." } } }, "O4iRrm3oADpYkdQi7EXvL90G7buh7LQC_1": { "properties": { "groupMyThingsInMarket": false, "isHiddenHubOnlySeeds": false, "requiresSystemLocation": false, "requiresHub": false, "type": "Auto", "allowRenameOfSeedTitle": false, "isHub": true, "rosettaId": "O4iRrm3oADpYkdQi7EXvL90G7buh7LQC", "actionRequired": false, "isHiddenHub": true, "minClientVersion": {}, "brand": "Button", "plusOnly": false, "limited": false, "version": "1", "isSystem": false, "requiresSystemNotifications": false, "name": "Virtual Button", "seedTitle": "Virtual Button", "family": "Physical" }, "ui": {}, "controls": {} }, "O9X5BGvYrlPwkTz84dgP5tXmeLiWnDh3_1": { "properties": { "requiresSystemLocation": false, "description": "Stringify Button gives you immediate control over any Flow. Just like any other Thing, simply connect it as a trigger in your Flow and the Stringify Button will automatically appear in My Things.", "heroImage": "O9X5BGvYrlPwkTz84dgP5tXmeLiWnDh3_1_yi6bwGcI.png", "requiresHub": true, "type": "Essentials", "allowRenameOfSeedTitle": true, "thingColor": "#CC0000", "isHub": false, "rosettaId": "O9X5BGvYrlPwkTz84dgP5tXmeLiWnDh3", "actionRequired": false, "minClientVersion": {}, "brand": "Button", "autoConsoleFav": true, "plusOnly": false, "limited": false, "deviceVersion": "1.0", "seedImage": "498uJMXpsOEbatnQf8Tgu5jQJHlS7uLM_1_2ZEw48y1.png", "version": "1", "isSystem": false, "requiresSystemNotifications": false, "requiresHiddenHub": true, "name": "Button (Red)", "seedTitle": "Red Button", "family": "Physical" }, "ui": { "elements": [{ "broadcast": true, "operandAppliesTo": "button1", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "{{control.Button1Name}} pressed", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["button1"], "operandAppliesToEnd": "button1", "trigger": true, "triggerText": "When you press this button", "actionSuccessMessage": "undefined", "elementName": "button1pressed", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["Button1Name", "Button1PressedAt"], "triggerFlowDescription": "I press the {{rosettaName}}", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "default": "on", "hidden": false, "removeOnPublish": false, "initControl": false, "name": "button1", "required": true }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "buttonIcon", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "buttonTriggerLabel", "required": false }, { "hidden": false, "removeOnPublish": false, "initControl": false, "name": "tapSaveToSelectThisTrigger", "required": false }] }], "console": { "webview": false, "consoleInit": false, "controlsToInclude": ["button1"] } }, "controls": { "buttonIcon": { "controlType": "image", "imageUrl": "O9X5BGvYrlPwkTz84dgP5tXmeLiWnDh3_1_BTDx3wc0.png", "eventTrigger": "none", "showNever": false, "controlDataType": "string" }, "tapSaveToSelectThisTrigger": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "bold", "controlDataType": "string", "triggerCaption": "Tap Save to select this trigger." }, "buttonTriggerLabel": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will execute when you press the button. You can find this button under Things on the dashboard or add it to the Control Shortcuts on the dashboard for faster access." }, "Button1Name": { "controlType": "variableOnly", "friendlyVariableName": "Button Name", "showNever": false, "controlDataType": "string" }, "Button1PressedAt": { "controlType": "variableOnly", "friendlyVariableName": "Pressed at", "showNever": false, "controlDataType": "string" }, "button1": { "controlType": "1button", "imageUrl": "498uJMXpsOEbatnQf8Tgu5jQJHlS7uLM_1_2ZEw48y1.png", "eventTrigger": "none", "showNever": false, "imagePressedUrl": "498uJMXpsOEbatnQf8Tgu5jQJHlS7uLM_1_ePmzRQLk.png", "controlDataType": "string" } } }, "rLdHdJr6_6": { "properties": { "requiresSystemLocation": false, "description": "Weather provides triggers for weather conditions and temperature in your area. Data provided by Weather Underground.", "heroImage": "rLdHdJr6_6-Z2lwr7j.jpg", "requiresHub": false, "type": "Essentials", "TTL": 300, "allowRenameOfSeedTitle": false, "thingColor": "#0293D4", "isHub": false, "rosettaId": "rLdHdJr6", "actionRequired": false, "minClientVersion": {}, "brand": "Weather", "autoConsoleFav": false, "deviceVersion": "1.0", "seedImage": "rLdHdJr6_6-2eliXd.png", "version": "6", "isSystem": true, "requiresSystemNotifications": false, "name": "Weather", "seedTitle": "Weather", "family": "Digital" }, "ui": { "elements": [{ "actionText": "Generate a weather report", "plusOnly": false, "actionFlowDescription": "generate a weather report on {{rosettaName}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "location", "trigger": false, "actionSuccessMessage": "generated a weather report {{control.report}}", "hideElement": false, "elementName": "weatherReport", "blacklisted": false, "variableInclude": ["report", "condition", "forecastUrl", "highTemp", "lowTemp", "sunriseTime", "sunsetTime", "humidity"], "action": true, "actionFailureMessage": "unable to generate a weather report", "expireSeconds": 0, "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": false, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "dateDropdown", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "reportHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "temperature", "triggerSuccessMessage": "temperature rose above {{control.temperature}} {{control.forecastURL}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["temperature"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Temperature rises above", "hideElement": false, "elementName": "trigger_rt_tempRisesAbove", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["varLocation", "temperature", "tempScale", "condition", "conditionImageUrl", "forecastUrl", "checkDateTime"], "triggerFlowDescription": "the temperature rises above a value on {{rosettaName}}", "action": false, "expireSeconds": 0, "operand": "rises above", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "temperature", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperatureUnitsLabel", "initControl": true, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "temperature", "triggerSuccessMessage": "temperature fell below {{control.temperature}} {{control.forecastURL}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["temperature"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Temperature drops below", "hideElement": false, "elementName": "trigger_rt_tempDropsBelow", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["varLocation", "temperature", "tempScale", "condition", "conditionImageUrl", "forecastUrl", "checkDateTime"], "triggerFlowDescription": "the temperature falls below a value on {{rosettaName}}", "action": false, "expireSeconds": 0, "operand": "falls below", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "temperature", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperatureUnitsLabel", "initControl": true, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "condition", "triggerSuccessMessage": "weather condition changed to {{control.condition}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["condition"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Weather condition changes to", "hideElement": false, "elementName": "trigger_rt_weatherConditionChanges", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["varLocation", "temperature", "tempScale", "condition", "conditionImageUrl", "forecastUrl", "checkDateTime"], "triggerFlowDescription": "the weather condition changes to a value on {{rosettaName}}", "action": false, "expireSeconds": 0, "operand": "changes to", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "dateDropdown", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "condition", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "uvIndex", "triggerSuccessMessage": "UV index rose to {[control.uvindex}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["uvIndex"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "UV index rises above", "hideElement": false, "elementName": "trigger_rt_UVRises", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["varLocation", "temperature", "tempScale", "condition", "uvIndex", "conditionImageUrl", "forecastUrl", "checkDateTime"], "triggerFlowDescription": "the UV index rises above on {{rosettaName}}", "action": false, "expireSeconds": 0, "operand": "rises above", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "uvIndex", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "uvHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "location", "triggerSuccessMessage": "weather report was generated {{control.report}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Weather report is generated", "hideElement": false, "elementName": "trigger_rt_weatherReportIsGenerated", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["report", "condition", "forecastUrl", "highTemp", "lowTemp", "sunriseTime", "sunsetTime", "humidity"], "triggerFlowDescription": "a weather report is generated on {{rosettaName}}", "action": false, "expireSeconds": 0, "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "dateDropdown", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "byTime", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "reportHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": false, "operandAppliesTo": "temperature", "triggerSuccessMessage": "temperature was above {{control.temperature}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["temperature"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Temperature is above", "hideElement": false, "elementName": "trigger_st_TempAbove", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["temperature"], "triggerFlowDescription": "the temperature is above a value on {{rosettaName}}", "action": false, "expireSeconds": -1, "operand": ">", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "temperature", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperatureUnitsLabel", "initControl": true, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": false, "operandAppliesTo": "temperature", "triggerSuccessMessage": "temperature was below {{control.temperature}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["temperature"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Temperature is below", "hideElement": false, "elementName": "trigger_st_TempBelow", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["temperature"], "triggerFlowDescription": "the temperature is below a value on {{rosettaName}}", "action": false, "expireSeconds": -1, "operand": "<", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "temperature", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperatureUnitsLabel", "initControl": true, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": false, "operandAppliesTo": "temperature", "triggerSuccessMessage": "high temperature forecast was above {{control.temperature}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["temperature"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "High temperature forecast will be above", "hideElement": false, "elementName": "trigger_st_HighTempAbove", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["temperature"], "triggerFlowDescription": "the high temperature forecast will be above a value on {{rosettaName}}", "action": false, "expireSeconds": 3600, "operand": ">", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "dateDropdown", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperature", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperatureUnitsLabel", "initControl": true, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "temperature", "triggerSuccessMessage": "low temperature forecast was below {{control.temperature}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["temperature"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Low temperature forecast will be below", "hideElement": false, "elementName": "trigger_st_LowTempBelow", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["temperature"], "triggerFlowDescription": "the low temperature forecast will be below a value on {{rosettaName}}", "action": false, "expireSeconds": 3600, "operand": "<", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "dateDropdown", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperature", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "temperatureUnitsLabel", "initControl": true, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "condition", "triggerSuccessMessage": "weather condition forecast was {{control.condition}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["condition"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "Weather condition forecast will be", "hideElement": false, "elementName": "trigger_st_WeatherCondition", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["condition"], "triggerFlowDescription": "the weather condition forecast will be on {{rosettaName}}", "action": false, "expireSeconds": 3600, "operand": "==", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "locationHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "dateDropdown", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "condition", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "uvIndex", "triggerSuccessMessage": "UV index was above ((control.uvindex}}", "triggerFailureMessage": "{{err}}", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": -1, "reInclude": ["uvIndex"], "operandAppliesToEnd": "location", "trigger": true, "triggerText": "UV index is above", "hideElement": false, "elementName": "trigger_st_UVAbove", "ignoreIncomingTimestamp": false, "blacklisted": false, "variableInclude": ["uvIndex"], "triggerFlowDescription": "the UV index is above a value on {{rosettaName}}", "action": false, "expireSeconds": 3600, "operand": ">", "controlsToInclude": [{ "name": "location", "initControl": false, "hidden": false, "required": true, "removeOnPublish": true }, { "name": "uvIndex", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "uvHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }] }, "controls": { "alertTextLabel": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Alert types are only valid in the United States. Choose 'ALL' to receive weather alerts outside of the USA." }, "checkDateTime": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Check Date & Time", "controlDataType": "string" }, "reportHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Report will be generated at the time you specify above. Don't forget to connect an action (e.g. Email, SMS, Sonos) to receive the weather report.", "actionCaption": "Donât forget to connect an action (e.g. Email, SMS, Sonos) to receive the weather report." }, "conditionImageUrl": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Condition Image URL", "controlDataType": "string" }, "byTime": { "controlType": "timePicker", "allowMultiple": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Generate Report At:", "allowMultiplePremiumOnly": false }, "timeStart": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Alert time start", "controlDataType": "string" }, "forecastUrl": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Forecast URL", "controlDataType": "string" }, "sunsetTime": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Sunset Time", "controlDataType": "string" }, "alert": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Weather alert description", "controlDataType": "string" }, "temperature": { "defaultValue": 72, "maxValue": 150, "eventTrigger": "none", "sliderKey": "Â°", "minValue": -40, "controlType": "slider", "friendlyVariableName": "Temperature", "showNever": false, "step": 1, "defaultFriendlyVariableName": "Temperature Threshold", "controlDataType": "string", "triggerCaption": "Temperature", "actionCaption": "Temperature" }, "humidity": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Average Humidity", "controlDataType": "string" }, "highTemp": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "High Temp", "controlDataType": "string" }, "varLocation": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Location", "controlDataType": "string" }, "sunriseTime": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Sunrise Time", "controlDataType": "string" }, "timeEnd": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Alert time end", "controlDataType": "string" }, "alertType": { "controlType": "dropdown", "oneLine": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Alert type", "items": [{ "objname": "All alerts", "objvalue": "ALL" }, { "objname": "Hurricane Local Statement", "objvalue": "HUR" }, { "objname": "Tornado  Watch or Warning", "objvalue": "TOR" }, { "objname": "Severe Thunderstorm Watch or Warning", "objvalue": "WRN" }, { "objname": "Winter Weather Advisory", "objvalue": "WIN" }, { "objname": "Flood Watch or Warning", "objvalue": "FLO" }, { "objname": "High Wind Advisory", "objvalue": "WND" }, { "objname": "Severe Weather Statement", "objvalue": "SVR" }, { "objname": "Heat Advisory", "objvalue": "HEA" }, { "objname": "Dense Fog Advisory", "objvalue": "FOG" }, { "objname": "Special Weather Statement", "objvalue": "SPE" }, { "objname": "Fire Weather Advisory", "objvalue": "FIR" }, { "objname": "Volcanic Activity Statement", "objvalue": "VOL" }, { "objname": "Hurricane Wind Warning", "objvalue": "HWW" }, { "objname": "Public Information Statement", "objvalue": "PUB" }] }, "tempScale": { "controlType": "dropdown", "friendlyVariableName": "Temperature Unit", "oneLine": true, "defaultValue": "F", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Temperature Unit", "items": [{ "objname": "Fahrenheit", "objvalue": "F" }, { "objname": "Celsius", "objvalue": "C" }] }, "condition": { "controlType": "dropdown", "friendlyVariableName": "Condition", "oneLine": true, "defaultValue": "rain", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Condition", "items": [{ "objname": "Rain", "objvalue": "rain" }, { "objname": "Snow", "objvalue": "snow" }, { "objname": "Cloudy", "objvalue": "cloudy" }, { "objname": "Clear", "objvalue": "clear" }, { "objname": "Sunny", "objvalue": "sunny" }, { "objname": "Overcast", "objvalue": "overcast" }, { "objname": "Fog", "objvalue": "fog" }, { "objname": "Haze", "objvalue": "haze" }, { "objname": "Sleet", "objvalue": "sleet" }, { "objname": "Hail", "objvalue": "hail" }, { "objname": "Freezing Rain", "objvalue": "freezing rain" }, { "objname": "Partly Sunny", "objvalue": "partly sunny" }, { "objname": "Mostly Sunny", "objvalue": "mostly sunny" }, { "objname": "Partly Cloudy", "objvalue": "partly cloudy" }, { "objname": "Mostly Cloudy", "objvalue": "mostly cloudy" }, { "objname": "Scattered Clouds", "objvalue": "scattered clouds" }] }, "dateDropdown": { "controlType": "dropdown", "oneLine": true, "defaultValue": "tomorrow", "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "For", "items": [{ "objname": "Tomorrow", "objvalue": "tomorrow" }, { "objname": "Today", "objvalue": "today" }], "actionCaption": "Report For" }, "temperatureUnitsLabel": { "textJustification": "left", "controlType": "textLabelWithValue", "isNumber": false, "defaultValue": "Fahrenheit", "showNever": false, "textStyle": "regular", "controlDataType": "string", "actionCaption": "Temperature Units" }, "lowTemp": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Low Temp", "controlDataType": "string" }, "report": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Weather Report Summary", "controlDataType": "string" }, "location": { "controlType": "locationSearchBar", "friendlyVariableName": "Location", "eventTrigger": "none", "showNever": false, "allowVariables": false, "controlDataType": "string", "triggerCaption": "Location", "helperText": "Enter zip code, city/state or address for different location.", "actionCaption": "Location" }, "uvIndex": { "minValue": 0, "controlType": "slider", "friendlyVariableName": "UV Index", "defaultValue": 3, "maxValue": 12, "eventTrigger": "none", "showNever": false, "defaultFriendlyVariableName": "UV Index Threshold", "controlDataType": "string", "triggerCaption": "UV Index" }, "alertTypeDescription": { "showNever": false, "controlType": "variableOnly", "friendlyVariableName": "Weather alert type", "controlDataType": "string" }, "locationHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Enter zip code, city/state or address for a different location", "actionCaption": "Enter zip code, city/state or address for a different location" }, "uvHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "UV Index Range & Exposure Level\\nLow: 0 â 2\\nMedium: 3 â 5\\nHigh: 6 â 7\\nVery High: 7 â 10\\nExtremely High: 11+\\nMore Info: http://www.epa.gov/sunwise/uvindex.html" } } }, "V8PB44ht_1": { "properties": { "description": "Email can be used to automatically send emails.", "heroImage": "V8PB44ht_1-Z2u4ikC.jpg", "type": "Essentials", "requiresHub": false, "TTL": 12000, "allowRenameOfSeedTitle": false, "thingColor": "#EE8816", "isHub": false, "rosettaId": "V8PB44ht", "actionRequired": false, "minClientVersion": {}, "brand": "Email", "autoConsoleFav": false, "deviceVersion": "1.0", "seedImage": "V8PB44ht_1-23sFch.png", "version": "1", "isSystem": true, "seedTitle": "Email", "name": "Email", "family": "Digital" }, "ui": { "elements": [{ "actionText": "Send me an email", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "undefined", "actionFlowDescription": "send me an {{rosettaName}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "to", "trigger": false, "actionSuccessMessage": "Email sent with the subject {{control.subject}}", "elementName": "sendEmail", "hideElement": false, "action": true, "actionFailureMessage": "unable to send Email", "expireSeconds": 0, "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "initControl": false, "name": "to", "required": false }, { "hidden": false, "initControl": false, "name": "subject", "required": true }, { "hidden": false, "initControl": false, "name": "body", "required": true }, { "hidden": false, "initControl": false, "name": "frequency", "required": true }, { "hidden": false, "initControl": false, "name": "timeOfDay", "required": true }, { "hidden": false, "initControl": false, "name": "dayOfWeek", "required": false }] }] }, "controls": { "to": { "friendlyVariableName": "to", "actionCaption": "To:  {{user.name}} ({{user.email}})", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textLabel" }, "body": { "friendlyVariableName": "body", "actionCaption": "Message", "controlDataType": "string", "triggerCaption": "Message", "placeholder": "Enter message. You can also tap on â+â to select parameters from triggers connected to this action. Parameters will be replaced with actual value when the flow runs.", "showNever": false, "eventTrigger": "none", "controlType": "textBox", "allowVariables": true }, "subject": { "friendlyVariableName": "subject", "actionCaption": "Subject", "controlDataType": "string", "triggerCaption": "Subject", "placeholder": "Enter and/or select subject", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": true, "isNumber": false }, "timeOfDay": { "actionCaption": "Time of day", "controlDataType": "string", "dependentOn": [{ "controlName": "frequency", "controlValue": "daily" }, { "controlName": "frequency", "controlValue": "weekly" }], "allowMultiplePremiumOnly": false, "allowMultiple": false, "showNever": false, "eventTrigger": "none", "controlType": "timePicker" }, "frequency": { "actionCaption": "Frequency", "controlDataType": "string", "items": [{ "objvalue": "immediately", "objname": "Send immediately" }, { "objvalue": "daily", "objname": "Send a daily digest" }, { "objvalue": "weekly", "objname": "Send a weekly digest" }, {}], "showNever": false, "eventTrigger": "none", "controlType": "dropdown", "oneLine": false }, "dayOfWeek": { "actionCaption": "Day of week", "controlDataType": "string", "dependentOn": [{ "controlName": "frequency", "controlValue": "weekly" }], "items": [{ "objvalue": "0", "objname": "Sunday" }, { "objvalue": "1", "objname": "Monday" }, { "objvalue": "2", "objname": "Tuesday" }, { "objvalue": "3", "objname": "Wednesday" }, { "objvalue": "4", "objname": "Thursday" }, { "objvalue": "5", "objname": "Friday" }, { "objvalue": "6", "objname": "Saturday" }], "showNever": false, "eventTrigger": "none", "controlType": "dropdown", "oneLine": false } } }, "Eh2SxU74_1": { "properties": { "requiresSystemLocation": true, "description": "Location allows Stringify to use information from cellular, Wi-Fi, GPS networks, and iBeacons to determine your approximate location. Location information is only used with your permission and must be enabled in your phone's Settings.", "heroImage": "Eh2SxU74_1-Z1R5EXP.jpg", "requiresHub": false, "type": "Location", "allowRenameOfSeedTitle": false, "thingColor": "#024D99", "isHub": false, "rosettaId": "Eh2SxU74", "actionRequired": false, "minClientVersion": {}, "brand": "Location", "autoConsoleFav": false, "interfaces": ["ios"], "deviceVersion": "1.0", "seedImage": "Eh2SxU74_1-Z1vsVOp.png", "version": "1", "isSystem": true, "requiresSystemNotifications": false, "name": "Location", "seedTitle": "Location", "family": "Digital" }, "ui": { "elements": [{ "broadcast": false, "operandAppliesTo": "eventType", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "I entered a location area {{control.locationMapURL}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["eventType"], "operandAppliesToEnd": "location_picker", "trigger": true, "triggerText": "I enter an area", "actionSuccessMessage": "undefined", "elementName": "ui_location_enter", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationMapURL", "occurredAt", "locationMapThumbnailURL", "locationEventTypeText", "locationMapThumbnail", "latlong"], "triggerFlowDescription": "I enter a Location area", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "iEnterAnAreaHelperText", "required": false }, { "default": "Location:", "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location_picker", "required": true }, { "default": "location_enter", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "eventType", "required": true }] }, { "broadcast": false, "operandAppliesTo": "eventType", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "I left a location area {{control.locationMapURL}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["eventType"], "operandAppliesToEnd": "location_picker", "trigger": true, "triggerText": "I leave an area", "actionSuccessMessage": "undefined", "elementName": "ui_location_exit", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationMapURL", "occurredAt", "locationMapThumbnailURL", "locationEventTypeText", "locationMapThumbnail", "latlong"], "triggerFlowDescription": "I leave a Location area", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "iLeaveAnAreaHelperText", "required": false }, { "default": "Location:", "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location_picker", "required": true }, { "default": "location_exit", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "eventType", "required": true }] }, { "broadcast": false, "operandAppliesTo": "eventTypeIsEnterOrExit", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "I entered or left a location area {{control.locationMapURL}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["eventTypeIsEnterOrExit"], "operandAppliesToEnd": "location_picker", "trigger": true, "triggerText": "I enter or leave an area", "actionSuccessMessage": "undefined", "elementName": "ui_location_enter_or_exit", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationMapURL", "occurredAt", "locationMapThumbnailURL", "locationEventTypeText", "locationMapThumbnail", "latlong"], "triggerFlowDescription": "I enter or leave a Location area", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "iEnterOrLeaveAnAreaHelperText", "required": false }, { "default": "Location:", "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location_picker", "required": true }, { "default": "1", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "eventTypeIsEnterOrExit", "required": true }] }, { "broadcast": false, "operandAppliesTo": "eventType", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "I was at a location area {{control.locationMapURL}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["eventType"], "operandAppliesToEnd": "location_picker", "trigger": true, "triggerText": "I am at a location", "actionSuccessMessage": "undefined", "elementName": "ui_location_is", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationMapURL", "occurredAt", "locationMapThumbnailURL", "locationEventTypeText", "locationMapThumbnail", "latlong"], "triggerFlowDescription": "I am at a Location", "action": false, "actionFailureMessage": "undefined", "expireSeconds": -1, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "iAmAtALocationHelperText", "required": false }, { "default": "Location:", "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location_picker", "required": true }, { "default": "location_enter", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "eventType", "required": true }] }, { "broadcast": false, "operandAppliesTo": "eventType", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "I was away from a location area {{control.locationMapURL}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["eventType"], "operandAppliesToEnd": "location_picker", "trigger": true, "triggerText": "I am away from a location", "actionSuccessMessage": "undefined", "elementName": "ui_location_away", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["locationMapURL", "occurredAt", "locationMapThumbnailURL", "locationEventTypeText", "locationMapThumbnail", "latlong"], "triggerFlowDescription": "I am away from a Location ", "action": false, "actionFailureMessage": "undefined", "expireSeconds": -1, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "iAmAwayFromALocationHelperText", "required": false }, { "default": "Location:", "hidden": false, "removeOnPublish": true, "initControl": false, "name": "location_picker", "required": true }, { "default": "location_exit", "hidden": true, "removeOnPublish": false, "initControl": false, "name": "eventType", "required": true }] }], "console": { "webview": false, "consoleInit": false, "controlsToInclude": [] } }, "controls": { "iEnterOrLeaveAnAreaHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will execute when you enter or exit the specified area. area. Permission to your mobile location services required." }, "iAmAwayFromALocationHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Your location status is set upon you leaving the specified area. Once you enter the area, it will reset. area. Permission to your mobile location services required." }, "locationMapThumbnailURL": { "controlType": "variableOnly", "friendlyVariableName": "Location map thumbnail URL", "showNever": false, "controlDataType": "string" }, "flow1": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow2": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow3": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow4": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow5": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow6": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow7": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow8": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "flow9": { "valueFontStyle": "regular", "visible": false, "controlType": "textLabelWithValuev2", "showNever": false, "textStyle": "regular", "controlDataType": "string", "enabled": false }, "locationMapURL": { "controlType": "variableOnly", "friendlyVariableName": "Location map URL", "showNever": false, "controlDataType": "string" }, "iEnterAnAreaHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will execute when you enter the specified area. Permission to your your mobile location services required." }, "occurredAt": { "controlType": "variableOnly", "friendlyVariableName": "Occurred at", "showNever": false, "controlDataType": "string" }, "iAmAtALocationHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "Your location status is set upon you entering the specified area. Once you leave the area, it will reset. area. Permission to your mobile location services required. " }, "latlong": { "controlType": "variableOnly", "friendlyVariableName": "Reported lat,long", "showNever": false, "controlDataType": "string" }, "eventType": { "controlType": "textInput", "isNumber": false, "allowVariables": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string" }, "iLeaveAnAreaHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "triggerCaption": "This trigger will execute when you exit the specified area. area. Permission to your mobile location services required." }, "currentLocation": { "controlType": "variableOnly", "friendlyVariableName": "location", "showNever": false, "controlDataType": "string" }, "locationEventTypeText": { "controlType": "variableOnly", "friendlyVariableName": "Entered OR Left", "showNever": false, "controlDataType": "string" }, "locationMapThumbnail": { "controlType": "variableOnly", "friendlyVariableName": "Location map thumbnail", "showNever": false, "controlDataType": "string" }, "location_picker": { "controlType": "locationPicker", "allowVariables": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string", "triggerCaption": "Location:" }, "eventTypeIsEnterOrExit": { "controlType": "textInput", "isNumber": false, "allowVariables": false, "eventTrigger": "none", "showNever": false, "controlDataType": "string" }, "locationActionHelperText": { "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "actionCaption": "This action will get your current location. Connect it to another action to use your location." }, "getMyCurrentLocationHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "controlDataType": "string", "actionCaption": "This action will get your current location. It must be connected to another action that can use the location in meaningful way." } } }, "2rB7D4mh96LFk9OKcVnKE6cxzfaBc6Ka_1": { "properties": { "requiresSystemLocation": false, "description": "Stringify Mode gives you quick way to run your flows. Simply connect Mode trigger to any flow and select from available modes (home, away, sleep or awake). You can set modes automatically when you leave or arrive at home. You can also set mode by tapping on the Thing or using your voice with Amazon Alexa. When the mode is set, all the flows including the Mode trigger will run.", "heroImage": "2rB7D4mh96LFk9OKcVnKE6cxzfaBc6Ka_1-1eFI4R.jpg", "requiresHub": false, "type": "Misc", "TTL": 600, "allowRenameOfSeedTitle": false, "thingColor": "#2B9CD8", "isHub": false, "rosettaId": "2rB7D4mh96LFk9OKcVnKE6cxzfaBc6Ka", "actionRequired": false, "minClientVersion": {}, "brand": "Mode", "plusOnly": false, "limited": false, "seedImage": "2rB7D4mh96LFk9OKcVnKE6cxzfaBc6Ka_1-Z2dK7b3.png", "version": "1", "isSystem": false, "requiresSystemNotifications": false, "name": "Mode", "seedTitle": "Mode", "family": "Digital" }, "ui": { "elements": [{ "broadcast": true, "operandAppliesTo": "chooseMode", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "mode was changed to {{control.chooseMode}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["chooseMode"], "operandAppliesToEnd": "chooseMode", "trigger": true, "triggerText": "Mode changes to...", "actionSuccessMessage": "undefined", "elementName": "when_mode_changes_to", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["chooseMode"], "triggerFlowDescription": "my {{rosettaName}} changes", "action": false, "actionFailureMessage": "undefined", "expireSeconds": 0, "operand": "changes to", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "chooseMode", "required": true }] }, { "broadcast": true, "operandAppliesTo": "chooseMode", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "mode was {{control.chooseMode}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["chooseMode"], "operandAppliesToEnd": "chooseMode", "trigger": true, "triggerText": "My mode is...", "actionSuccessMessage": "undefined", "elementName": "when_mode_is", "hideElement": false, "ignoreIncomingTimestamp": false, "variableInclude": ["chooseMode"], "triggerFlowDescription": "my {{rosettaName}} is", "action": false, "actionFailureMessage": "undefined", "expireSeconds": -1, "operand": "==", "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "chooseMode", "required": true }] }, { "actionText": "Change my mode to...", "triggerFailureMessage": "{{err}}", "triggerSuccessMessage": "undefined", "actionFlowDescription": "change my {{rosettaName}}", "expectedActionDuration": 300, "expectedTriggerDuration": 0, "operandAppliesToEnd": "chooseMode", "trigger": false, "TTL": 600, "actionSuccessMessage": "mode changed to {{control.chooseMode}}", "elementName": "change_mode_to", "hideElement": false, "action": true, "actionFailureMessage": "unable to change mode", "expireSeconds": 0, "premiumOnly": false, "controlsToInclude": [{ "hidden": false, "removeOnPublish": false, "initControl": false, "name": "chooseMode", "required": true }] }], "console": { "webview": false, "consoleInit": false, "controlsToInclude": ["chooseMode"] } }, "controls": { "chooseMode": { "friendlyVariableName": "Mode", "actionCaption": "Mode", "controlDataType": "string", "triggerCaption": "Mode", "items": [{ "objvalue": "home", "objBackgroundColor": "#3399FF", "objname": "Home" }, { "objvalue": "away", "objBackgroundColor": "#3399FF", "objname": "Away" }, { "objvalue": "awake", "objBackgroundColor": "#3399FF", "objname": "Awake" }, { "objvalue": "asleep", "objBackgroundColor": "#3399FF", "objname": "Asleep" }], "showNever": false, "eventTrigger": "none", "controlType": "segmentedControl" } } }, "CpBbUMD7LDJ3FTkunQPSYfPGLeAAqkdU_1": { "properties": { "requiresSystemLocation": false, "description": "The Text Function thing allows you to perform text matching and manipulation.", "heroImage": "CpBbUMD7LDJ3FTkunQPSYfPGLeAAqkdU_1_Ti5Ww7vW.jpg", "requiresHub": false, "type": "Pro", "TTL": 600, "allowRenameOfSeedTitle": false, "thingColor": "#616161", "isHub": false, "rosettaId": "CpBbUMD7LDJ3FTkunQPSYfPGLeAAqkdU", "actionRequired": false, "minClientVersion": {}, "brand": "Functions", "maxAccounts": 1, "deviceVersion": "1.0", "seedImage": "CpBbUMD7LDJ3FTkunQPSYfPGLeAAqkdU_1-2m6Gs1.png", "version": "1", "isSystem": false, "requiresSystemNotifications": false, "name": "Functions: Text", "seedTitle": "Functions: Text", "family": "Digital" }, "ui": { "elements": [{ "actionText": "Continue the Flow if text contains", "plusOnly": false, "actionFlowDescription": "Continue the Flow if text contains a value", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Continuing flow: {{control.val1}} contains {{control.testAgainst}}", "hideElement": false, "elementName": "ifContains", "variableInclude": ["val1", "testAgainst"], "action": true, "actionFailureMessage": "Not continuing flow: {{err}}", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "testAgainst", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "lowercaseComparisonWarning", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Continue the Flow if text does not contain", "plusOnly": false, "actionFlowDescription": "Continue the Flow if text does not contain a value", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Continuing flow: {{control.val1}} does not contain {{control.testAgainst}}", "hideElement": false, "elementName": "ifNotContains", "variableInclude": ["val1", "testAgainst"], "action": true, "actionFailureMessage": "Not continuing flow: {{err}}", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "testAgainst", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "lowercaseComparisonWarning", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Continue the Flow if text equals", "plusOnly": false, "actionFlowDescription": "Continue the Flow if text equals a value", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Continuing flow: {{control.val1}} equals {{control.testAgainst}}", "hideElement": false, "elementName": "isEqual", "variableInclude": ["val1", "testAgainst"], "action": true, "actionFailureMessage": "Not continuing flow: {{err}}", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "testAgainst", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "lowercaseComparisonWarning", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Continue the Flow if text does not equal", "plusOnly": false, "actionFlowDescription": "Continue the Flow if text does not equal a value", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Continuing flow: {{control.val1}} is not equal to {{control.testAgainst}}", "hideElement": false, "elementName": "isNotEqual", "variableInclude": ["val1", "testAgainst"], "action": true, "actionFailureMessage": "Not continuing flow: {{err}}", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "testAgainst", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "lowercaseComparisonWarning", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Replace text", "plusOnly": false, "actionFlowDescription": "Replace text", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Replacement text: {{control.output}}", "hideElement": false, "elementName": "findReplace", "variableInclude": ["output"], "action": true, "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceFind", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceReplace", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Extract a number from a string", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Extracted {{control.output}} from {{control.val1}}", "hideElement": false, "elementName": "extractNumFromString", "variableInclude": ["output"], "action": true, "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Convert text to upper case", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Converted {{control.val1}} to upper case", "hideElement": false, "elementName": "toUpperCase", "variableInclude": ["output"], "action": true, "actionFailureMessage": "Failed to convert text to upper case", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Convert text to lower case", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Converted {{control.val1}} to lower case", "hideElement": false, "elementName": "toLowerCase", "variableInclude": ["output"], "action": true, "actionFailureMessage": "Failed to convert to lower case", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "actionText": "Continue the Flow if text matches a regular expression", "plusOnly": false, "actionFlowDescription": "Continue the Flow if text matches a regular expression", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Continuing flow: {{control.val1}} matches {{control.testAgainstRegex}}", "hideElement": false, "elementName": "regex", "variableInclude": ["val1"], "action": true, "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "testAgainstRegex", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "regExHelperText", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "actionText": "Extract regular expression groups", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Extracted groups from {{control.val1}}", "hideElement": false, "elementName": "extractRegex", "variableInclude": ["val1", "group1", "group2", "group3"], "action": true, "actionFailureMessage": "Error: {{err}}", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "testAgainstRegex", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Extract a substring from text", "plusOnly": false, "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "val1", "trigger": false, "actionSuccessMessage": "Extracted substring from {{control.val1}", "hideElement": false, "elementName": "extractSubstring", "variableInclude": ["val1", "output"], "action": true, "actionFailureMessage": "Error extracting substring {{err}}", "expireSeconds": 0, "controlsToInclude": [{ "name": "val1", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "substringStart", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "substringEnd", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "replaceHelperText", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }], "console": { "consoleInit": false, "webview": false, "controlsToInclude": [] } }, "controls": { "testAgainstRegex": { "actionCaption": "Regular expression (javascript)", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": false, "isNumber": false }, "replaceHelperText": { "actionCaption": "The output will be available as a parameter to the next action in your flow.", "controlDataType": "string", "textJustification": "center", "showNever": false, "textStyle": "regular", "eventTrigger": "none", "controlType": "textLabel" }, "replaceReplace": { "actionCaption": "Replace with:", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": false, "isNumber": false }, "regExHelperText": { "actionCaption": "ex: \\d+  (leading and trailing slashes not required)", "controlDataType": "string", "showNever": false, "textStyle": "regular", "controlType": "textLabelWithValue", "isNumber": false }, "substringEnd": { "actionCaption": "End character position", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": false, "isNumber": false }, "lowercaseComparisonWarning": { "actionCaption": "Comparisons are case insensitive", "controlDataType": "string", "triggerCaption": "Comparisons are case insensitive", "textJustification": "center", "showNever": false, "textStyle": "regular", "eventTrigger": "none", "controlType": "textLabel" }, "testAgainst": { "friendlyVariableName": "Value to test against", "actionCaption": "Value to test against", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": false, "isNumber": false }, "replaceFind": { "actionCaption": "Find:", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": false, "isNumber": false }, "val1": { "friendlyVariableName": "Input value", "actionCaption": "Text", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": true, "isNumber": false }, "group3": { "friendlyVariableName": "Group 3", "controlDataType": "string", "showNever": false, "controlType": "variableOnly" }, "group1": { "friendlyVariableName": "Group 1", "controlDataType": "string", "showNever": false, "controlType": "variableOnly" }, "output": { "friendlyVariableName": "Output", "controlDataType": "string", "showNever": false, "controlType": "variableOnly" }, "group2": { "friendlyVariableName": "Group 2", "controlDataType": "string", "showNever": false, "controlType": "variableOnly" }, "substringStart": { "actionCaption": "Start character position", "controlDataType": "string", "showNever": false, "eventTrigger": "none", "controlType": "textInput", "allowVariables": false, "isNumber": false } } }, "9qfKSlb55trtw4CQlkrYnDTE35fHWUCS_1": { "properties": { "requiresSystemLocation": false, "description": "Meet the Nest Learning Thermostat.\nMost people don't program their thermostats â it's just too complicated. And that wastes a lot of energy. So we made it simple. The Nest Learning Thermostat programs itself and can be controlled from your phone.", "heroImage": "wSkGqa1p_1_0HVfxvZ7.jpg", "requiresHub": true, "type": "Thermostats", "allowRenameOfSeedTitle": false, "thingColor": "#4BADD4", "isHub": false, "rosettaId": "9qfKSlb55trtw4CQlkrYnDTE35fHWUCS", "actionRequired": false, "minClientVersion": {}, "brand": "Nest", "deviceType": "thermostat", "plusOnly": false, "limited": false, "sla": 300, "deviceVersion": "1.0", "seedImage": "wSkGqa1p_1_zk8SJ5KL.png", "version": "1", "isSystem": false, "requiresSystemNotifications": false, "requiresHiddenHub": false, "name": "Nest Thermostat (No A/C No Fan)", "seedTitle": "Nest Thermostat", "family": "Physical" }, "ui": { "elements": [{ "broadcast": true, "operandAppliesTo": "ambient_temp_f", "expectedActionDuration": 0, "expectedTriggerDuration": 30, "reInclude": ["ambient_temp_f"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Temperature rises above", "hideElement": false, "elementName": "tempAbove", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "ambient_temp_f"], "triggerFlowDescription": "the temperature rises above a value on my {{rosettaName}}", "action": false, "expireSeconds": 0, "premiumOnly": false, "operand": "rises above", "controlsToInclude": [{ "name": "ambient_temp_f", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "ambient_temp_f", "expectedActionDuration": 0, "expectedTriggerDuration": 30, "reInclude": ["ambient_temp_f"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Temperature drops below", "hideElement": false, "elementName": "tempBelow", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "ambient_temp_f"], "triggerFlowDescription": "the temperature falls below a value on my {{rosettaName}}", "action": false, "expireSeconds": 0, "premiumOnly": false, "operand": "falls below", "controlsToInclude": [{ "name": "ambient_temp_f", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "humidity", "expectedActionDuration": 0, "expectedTriggerDuration": 30, "reInclude": ["humidity"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Humidity rises above", "hideElement": false, "elementName": "humidAbove", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "humidity"], "triggerFlowDescription": "the humidity rises above a value on my {{rosettaName}}", "action": false, "expireSeconds": 0, "premiumOnly": false, "operand": "rises above", "controlsToInclude": [{ "name": "humidity", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "humidity", "expectedActionDuration": 0, "expectedTriggerDuration": 30, "reInclude": ["humidity"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Humidity drops below", "hideElement": false, "elementName": "humidBelow", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "humidity"], "triggerFlowDescription": "the humidity falls below a value on my {{rosettaName}}", "action": false, "expireSeconds": 0, "premiumOnly": false, "operand": "falls below", "controlsToInclude": [{ "name": "humidity", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }] }, { "actionText": "Set temperature", "actionFlowDescription": "set the temperature on my {{rosettaName}}", "expectedActionDuration": 5, "expectedTriggerDuration": 0, "operandAppliesToEnd": "temperature", "action": true, "expireSeconds": 0, "trigger": false, "premiumOnly": false, "hideElement": false, "elementName": "tempSet", "controlsToInclude": [{ "name": "mode", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }, { "name": "temperatureSlider", "initControl": false, "default": null, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "ambient_temp_f", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["ambient_temp_f"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Temperature is above", "hideElement": false, "elementName": "tempAboveState", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "ambient_temp_f"], "triggerFlowDescription": "the temperature is above a value on my {{rosettaName}}", "action": false, "expireSeconds": -1, "premiumOnly": false, "operand": ">", "controlsToInclude": [{ "name": "ambient_temp_f", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "ambient_temp_f", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["ambient_temp_f"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Temperature is below", "hideElement": false, "elementName": "tempBelowState", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "ambient_temp_f"], "triggerFlowDescription": "the temperature is below a value on my {{rosettaName}}", "action": false, "expireSeconds": -1, "premiumOnly": false, "operand": "<", "controlsToInclude": [{ "name": "ambient_temp_f", "initControl": false, "default": null, "hidden": false, "required": true, "removeOnPublish": false }] }, { "actionText": "Warm up", "actionFlowDescription": "warm up the temperature on my {{rosettaName}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "temperature", "action": true, "expireSeconds": 0, "trigger": false, "premiumOnly": false, "hideElement": false, "elementName": "adjHeatByDegrees", "controlsToInclude": [{ "name": "tempAdjHeat", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "tempAdjTextLabel", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "actionText": "Cool down", "actionFlowDescription": "cool down the temperature on my {{rosettaName}}", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "operandAppliesToEnd": "temperature", "action": true, "expireSeconds": 0, "trigger": false, "premiumOnly": false, "hideElement": false, "elementName": "adjCoolByDegrees", "controlsToInclude": [{ "name": "tempAdjCool", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }, { "name": "tempAdjTextLabel", "initControl": false, "hidden": false, "required": false, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "hvac_state", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["hvac_state"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "HVAC state changes", "hideElement": false, "elementName": "hvac_state_changes", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "hvac_state"], "triggerFlowDescription": "the HVAC state changes on my {{rosettaName}}", "action": false, "expireSeconds": 0, "premiumOnly": false, "operand": "changes to", "controlsToInclude": [{ "name": "hvac_state", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "hvac_state", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["hvac_state"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "HVAC state is", "hideElement": false, "elementName": "hvac_state_is", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "hvac_state"], "triggerFlowDescription": "the HVAC state is a particular value on my {{rosettaName}}", "action": false, "expireSeconds": -1, "premiumOnly": false, "operand": "==", "controlsToInclude": [{ "name": "hvac_state", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "mode", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["mode"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Mode changes to", "hideElement": false, "elementName": "modeChangesTo", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "occurredAt", "mode"], "triggerFlowDescription": "{{rosettaName}} changes to a specific mode", "action": false, "expireSeconds": 0, "premiumOnly": false, "operand": "changes to", "controlsToInclude": [{ "name": "mode", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }, { "broadcast": true, "operandAppliesTo": "mode", "expectedActionDuration": 0, "expectedTriggerDuration": 0, "reInclude": ["mode"], "operandAppliesToEnd": "temperature", "trigger": true, "triggerText": "Mode is", "hideElement": false, "elementName": "modeIs", "ignoreIncomingTimestamp": false, "variableInclude": ["deviceName", "occurredAt", "mode"], "triggerFlowDescription": "{{rosettaName}} is set to a mode", "action": false, "expireSeconds": -1, "premiumOnly": false, "operand": "==", "controlsToInclude": [{ "name": "mode", "initControl": false, "hidden": false, "required": true, "removeOnPublish": false }] }], "console": { "consoleInit": false, "webview": false, "controlsToInclude": ["mode", "offLabel", "temperature", "ambient_temp_console", "humidity_console"] }, "consoleMini": { "controlsToInclude": ["heatMiniDisplay", "offMiniDisplay", "miniTempAdjust", "ecoMiniDisplayHeat", "ecoMiniDisplayCool", "statusLabel"] } }, "controls": { "has_leaf": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false }, "homeModeWithTempChange_textLabel": { "textJustification": "center", "controlType": "textLabel", "dependentOn": [{ "controlName": "away", "controlValue": "away" }], "eventTrigger": "none", "showNever": false, "textStyle": "bold", "uiControl": false, "controlDataType": "string", "actionCaption": "Adjusting the temperature will change your Nest from \"away\" to \"home\" mode." }, "humidity_console": { "controlType": "textLabelWithValue", "isNumber": false, "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "actionCaption": "Humidity" }, "changeAwayModeHelpText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "triggerCaption": "This trigger will execute when Nest changes to Away.", "actionCaption": "This action will set Nest to Away mode. If you have multiple Nest devices, they all will be set to Away when this action executes." }, "temperature_scale": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false }, "heatMiniDisplay": { "controlType": "imageWithValue", "valueControlName": "temperature", "dependentOn": [{ "controlName": "mode", "controlValue": "heat" }], "imageUrl": "heat", "showNever": false, "uiControl": false, "controlDataType": "string", "height": "full" }, "offMiniDisplay": { "controlType": "imageWithValue", "dependentOn": [{ "controlName": "mode", "controlValue": "off" }], "imageUrl": "off", "showNever": false, "uiControl": false, "controlDataType": "string", "height": "full" }, "deviceName": { "controlType": "textLabel", "friendlyVariableName": "Nest name", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "triggerCaption": "Thermostat Name", "actionCaption": "Thermostat Name" }, "offLabel": { "textJustification": "center", "controlType": "textLabel", "dependentOn": [{ "controlName": "mode", "controlValue": "off" }], "eventTrigger": "none", "showNever": false, "textStyle": "bold", "uiControl": false, "controlDataType": "string", "actionCaption": "Your Nest is off." }, "tempAdjCool": { "controlType": "dropdown", "oneLine": false, "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "items": [{ "objname": "1Âº", "objvalue": "1" }, { "objname": "2Âº", "objvalue": "2" }, { "objname": "3Âº", "objvalue": "3" }, { "objname": "4Âº", "objvalue": "4" }, { "objname": "5Âº", "objvalue": "5" }, { "objname": "6Âº", "objvalue": "6" }, { "objname": "7Âº", "objvalue": "7" }, { "objname": "8Âº", "objvalue": "8" }, { "objname": "9Âª", "objvalue": "9" }, { "objname": "10Âª", "objvalue": "10" }], "actionCaption": "Decrease Temp By" }, "mode": { "controlType": "segmentedControl", "friendlyVariableName": "Mode", "capabilitiesMap": "temperatureMode3", "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "items": [{ "objvalue": "off", "objImage": "wSkGqa1p_1_osSl7BJn.png", "objname": "Off", "objImageSelected": "wSkGqa1p_1_wKYldHd2.png" }, { "objvalue": "heat", "objImage": "wSkGqa1p_1_qawf17PU.png", "objname": "Heat", "objImageSelected": "wSkGqa1p_1_cGCBzmSH.png" }, { "objvalue": "eco", "objImage": "wSkGqa1p_1_bnB3Cd58.png", "objname": "Eco", "objImageSelected": "wSkGqa1p_1_2raqgoPB.png" }] }, "tempAdjHeat": { "controlType": "dropdown", "oneLine": false, "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "items": [{ "objname": "1Âº", "objvalue": "1" }, { "objname": "2Âº", "objvalue": "2" }, { "objname": "3Âº", "objvalue": "3" }, { "objname": "4Âº", "objvalue": "4" }, { "objname": "5Âº", "objvalue": "5" }, { "objname": "6Âº", "objvalue": "6" }, { "objname": "7Âº", "objvalue": "7" }, { "objname": "8Âº", "objvalue": "8" }, { "objname": "9Âº", "objvalue": "9" }, { "objname": "10Âª", "objvalue": "10" }], "actionCaption": "Increase Temp By" }, "eco_temperature_high": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false }, "homeAway": { "controlType": "textLabelWithValue", "isNumber": false, "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "actionCaption": "Status" }, "temperature": { "minValue": 9, "controlType": "tempControl", "friendlyVariableName": "Temp", "dependentOn": [{ "controlName": "mode", "controlValue": "heat" }], "capabilitiesMap": "temperature", "maxValue": 90, "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "triggerCaption": "Temperature", "actionCaption": "Temperature" }, "humidity": { "minValue": 0, "controlType": "slider", "friendlyVariableName": "Humidity", "capabilitiesMap": "humiditySensor", "maxValue": 100, "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "triggerCaption": "Humidity" }, "is_online": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false }, "ecoMiniDisplayHeat": { "controlType": "imageWithValue", "dependentOn": [{ "controlName": "mode", "controlValue": "eco" }], "imageUrl": "eco", "showNever": false, "uiControl": false, "controlDataType": "string", "height": "half" }, "nestStatusAwayHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "triggerCaption": "This status is set when Nest is set to Away mode. " }, "tempAdjTextLabel": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "actionCaption": "This action will not change the mode of your thermostat." }, "hvac_state": { "controlType": "dropdown", "friendlyVariableName": "HVAC State", "capabilitiesMap": "hvacMode2", "oneLine": false, "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "triggerCaption": "HVAC State", "items": [{ "objname": "Heating", "objvalue": "heating" }, { "objname": "Off", "objvalue": "off" }] }, "occurredAt": { "showNever": false, "uiControl": false, "controlType": "variableOnly", "friendlyVariableName": "Occurred at", "controlDataType": "string", "capabilitiesMap": "timestamp" }, "miniTempAdjust": { "controlType": "plusMinus", "valueControlName": "temperature", "dependentOn": [{ "controlName": "mode", "controlValue": "heat" }], "showNever": false, "uiControl": false, "controlDataType": "string", "height": "full" }, "eco_temperature_low": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false }, "temperatureSlider": { "defaultValue": 50, "maxValue": 90, "eventTrigger": "none", "sliderKey": "Âº", "minValue": 9, "controlType": "slider", "dependentOn": [{ "controlName": "mode", "controlValue": "heat" }], "showNever": false, "step": 1, "uiControl": false, "controlDataType": "string", "triggerCaption": "Temperature", "actionCaption": "Temperature" }, "ecoMiniDisplayCool": { "showNever": false, "uiControl": false, "controlType": "imageWithValue", "controlDataType": "string", "dependentOn": [{ "controlName": "mode", "controlValue": "eco" }], "height": "half" }, "changeHomeModeHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "triggerCaption": "This trigger will execute when Nest changes to Home.", "actionCaption": "This action will set Nest to Home mode. If you have multiple Nest devices, they all will be set to Home when this action executes." }, "statusLabel": { "textJustification": "left", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "bold", "uiControl": false, "controlDataType": "string", "actionCaption": "Currently" }, "last_connection": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false }, "ambient_temp_f": { "minValue": 0, "controlType": "slider", "friendlyVariableName": "Current temperature", "capabilitiesMap": "ambientTemperature", "maxValue": 100, "eventTrigger": "none", "showNever": false, "uiControl": false, "controlDataType": "string", "triggerCaption": "Temperature", "sliderKey": "Â°" }, "changeAwayModeIcon": { "controlType": "image", "imageUrl": "wSkGqa1p_1_53PRaT58.png", "eventTrigger": "none", "showNever": false, "imageJustification": "center", "uiControl": false, "controlDataType": "string" }, "nestStatusHomeHelperText": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "triggerCaption": "This status is set when Nest is set to Home mode. " }, "ambient_temp_console": { "textJustification": "left", "controlType": "textLabelWithValue", "isNumber": false, "showNever": false, "textStyle": "regular", "uiControl": false, "controlDataType": "string", "actionCaption": "Current temp" }, "changeHomeModeSave": { "textJustification": "center", "controlType": "textLabel", "eventTrigger": "none", "showNever": false, "textStyle": "bold", "uiControl": false, "controlDataType": "string", "triggerCaption": "Tap save to select this trigger.", "actionCaption": "Tap save to select this action." }, "changeHomeModeIcon": { "controlType": "image", "imageUrl": "wSkGqa1p_1_OAbRxMBB.png", "eventTrigger": "none", "showNever": false, "imageJustification": "center", "uiControl": false, "controlDataType": "string" }, "is_using_emergency_heat": { "showNever": false, "textStyle": "regular", "uiControl": false, "controlType": "textLabelWithValue", "controlDataType": "string", "isNumber": false } } } }, "groups": [] },
  "mySeed": {"data": 2}
}